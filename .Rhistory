shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print hotels
hotels
hotel
runApp()
runApp()
runApp()
shiny::runApp()
library(dplyr)
library(rlang)
library(ggplot2)
library(plotly)
library(reactable)
#install.packages("shiny")
library(shiny)
#install.packages("DT")
library(DT)
bookings<- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv")%>%
select(-hotel,-arrival_date_month,-meal,-country,-market_segment,arrival_date_year) %>%
unique() %>%
head(100)
print(hotels)
library(dplyr)
library(rlang)
library(ggplot2)
library(plotly)
library(reactable)
#install.packages("shiny")
library(shiny)
#install.packages("DT")
library(DT)
bookings<- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv")%>%
select(-hotel,-arrival_date_month,-meal,-country,-market_segment,arrival_date_year) %>%
unique() %>%
head(100)
print(bookings)
library(dplyr)
library(rlang)
library(ggplot2)
library(plotly)
library(reactable)
#install.packages("shiny")
library(shiny)
#install.packages("DT")
library(DT)
bookings<- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv")%>%
select(-hotel,-arrival_date_month,-meal,-country,-market_segment,arrival_date_year) %>%
unique() %>%
head(100)
print(bookings)
hotels <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv") %>%
select(-row_n) %>%
unique() %>%
head(20)
library(dplyr)
library(rlang)
library(ggplot2)
library(plotly)
library(reactable)
#install.packages("shiny")
library(shiny)
#install.packages("DT")
library(DT)
bookings<- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv")%>%
select(-hotel,-arrival_date_month,-meal,-country,-market_segment,arrival_date_year) %>%
unique() %>%
head(100)
print(bookings)
datatable(bookings[,1:8])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bookings
data.frame(bookings)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
colnames(bookings)
lead_time
View(bookings)
View(bookings)
runApp()
runApp()
runApp()
runApp()
View(bookings)
colnames(bookings)
runApp()
runApp()
runApp()
runApp()
runApp()
colnames(bookings)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bookings)
View(bookings)
colnames(bookings)
View(bookings)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(bookings)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
filteredData <- reactive({
df <- bookings
if (input$HotelInput != "Resort Hotel") {
df <- df %>% filter(hotel == input$HotelInput)
}
df
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
bookings
head(bookings)
colnames(bookings)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
